CREATE TABLE SEGMENT_MASTER
(
    SEGMENT_ID INT NOT NULL,
    SEGMENT_DESC VARCHAR(50) NOT NULL,
	DISPLAY	VARCHAR(50) NOT NULL,

	CONSTRAINT 	SM_SEGMENT_ID_PK PRIMARY KEY (SEGMENT_ID)
);

CREATE TABLE PROTOCOL_MASTER
(
	PROTOCOL_ID	INT NOT NULL,	
	PROTOCOL_DESC	VARCHAR(100) NOT NULL,
	DISPLAY	VARCHAR(50) NOT NULL,
	
	CONSTRAINT 	PM_PROTOCOL_ID_PK PRIMARY KEY (PROTOCOL_ID)
);

CREATE TABLE PARAM_MASTER
(
    PARAM_ID INT NOT NULL,
    PARAM_NAME VARCHAR(50) NOT NULL,
	DISPLAY	VARCHAR(50) NOT NULL,

	CONSTRAINT PM_PARAM_ID_PK PRIMARY KEY (PARAM_ID)
);

CREATE TABLE PARAM_VALIDATION_MASTER
(
    PARAM_ID INT NOT NULL,
    SEGMENT_ID INT NOT NULL,
	PROTOCOL_ID INT NOT NULL,
	IS_MANDATORY BOOLEAN ,
	VALID_VALUES	VARCHAR(500),
	
	CONSTRAINT PVM_PARAM_ID_PK PRIMARY KEY (PARAM_ID, SEGMENT_ID, PROTOCOL_ID),
	CONSTRAINT PVM_PARAM_ID_FK 	FOREIGN KEY (PARAM_ID) REFERENCES 	PARAM_MASTER(PARAM_ID),
	CONSTRAINT PVM_SEGMENT_ID_FK	FOREIGN KEY (SEGMENT_ID) REFERENCES 	SEGMENT_MASTER(SEGMENT_ID),
	CONSTRAINT PVM_PROTOCOL_ID_FK FOREIGN KEY (PROTOCOL_ID) REFERENCES PROTOCOL_MASTER(PROTOCOL_ID)
);


CREATE TABLE TRANSFER_MASTER	
(
	TRANSFER_ID INT  NOT NULL,	
	APPLICATION_NAME VARCHAR(100) NOT NULL,
	DISABLED BOOLEAN,
	CREATED_BY	VARCHAR(100),
	CREATED_ON DATE,
	MODIFIED_BY VARCHAR(100),
	MODIFIED_ON DATE,
	
	CONSTRAINT 	TM_TRANSFER_ID_PK PRIMARY KEY (TRANSFER_ID)
);


CREATE TABLE TRANSFER_PARAMS
(
	TRANSFER_ID INT  NOT NULL,	
	SEGMENT_ID INT  NOT NULL,
	PROTOCOL_ID INT NOT NULL,
	PARAM_ID INT NOT NULL,
	PARAM_VALUE		VARCHAR(500),
	
	CONSTRAINT CONFIG_PARAMS_PK 	PRIMARY KEY (TRANSFER_ID, SEGMENT_ID, PROTOCOL_ID, PARAM_ID),
	CONSTRAINT CP_TRANSFER_ID_FK	FOREIGN KEY (TRANSFER_ID) REFERENCES 	TRANSFER_MASTER(TRANSFER_ID),
	CONSTRAINT CP_SEGMENT_ID_FK	FOREIGN KEY (SEGMENT_ID) REFERENCES 	SEGMENT_MASTER(SEGMENT_ID),
	CONSTRAINT CP_PROTOCOL_ID_FK FOREIGN KEY (PROTOCOL_ID) REFERENCES PROTOCOL_MASTER(PROTOCOL_ID),
	CONSTRAINT CP_PARAM_ID_FK 	FOREIGN KEY (PARAM_ID) REFERENCES 	PARAM_MASTER(PARAM_ID)
);

CREATE TABLE JOB_HISTORY
(
	CORELATION_ID	INT,
    JOB_ID          INT,
	MFT_ID	INT,
	FAILOVER_FTS_ID		INT,
	SOURCE_FILE_PATH       VARCHAR(1000),
    SOURCE_FILE_NAME		VARCHAR(200),
    SOURCE_FILE_SIZE       INT,
    SOURCE_FILE_CHECKSUM        INT,
	SOURCE_DOWNLOAD_TIME TIMESTAMP,
    TARGET_FILE_PATH       VARCHAR(1000),
	TARGET_FILE_NAME		VARCHAR(200),
    TARGET_FILE_SIZE       INT,
    TARGET_FILE_CHECKSUM        INT,
    TARGET_UPLOAD_TIME TIMESTAMP,
    STATUS          VARCHAR(10),
    COMMENTS        VARCHAR(512),
	RETRY_COUNT		INT,
    CREATED_TIME    TIMESTAMP,
    UPDATED_TIME    TIMESTAMP,
	
	CONSTRAINT 	JOB_HISTORY_FK1 	FOREIGN KEY (MFT_ID) REFERENCES 	MFT_MASTER(MFT_ID)
);



CREATE SEQUENCE 	MFT_ID_SEQ
START WITH   1
INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 CREATE SEQUENCE 	JOB_HISTORY_JOB_ID_SEQ
START WITH   1
INCREMENT BY   1
 NOCACHE
 NOCYCLE;